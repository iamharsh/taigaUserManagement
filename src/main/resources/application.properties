#it will help to assign port number automatically, either PORT as command line argument or default 0 to assign auto
server.port=${PORT:0}
spring.application.name=users-ws
#url to connect client to eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka
#it will help to restart application automatically
spring.devtools.restart.enabled=true
#a unique id to identify a running application.
#spring.application.name=app name /spring.application.instance_id = command line argument /random.value = random no.
eureka.instance.instace-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#to enable h2 console and sign in with user pass to be able to browse db structure and run query
spring.h2.console.enabled=true
#to access as it have to get through firewall
spring.h2.console.settings.web-allow-others=true
#ip where gateway is running
gateway.ip=172.30.24.209
#10days in miliseconds to set token expiration date in authfilter
token.expiration_time = 864000000 
token.secret = 123456789
login.url.path = /users/login

#use mysql db
spring.datasource.host:jdbc:mysql://localhost:3306/schemaname?serverTimezone=UTC
spring.datasource.username=username
spring.datasource.password=password
#to auto create table when ms runs or update the data in already created table
spring.jpa.hibernate.ddl-auto=update




###need to install rabbitmq from www.rabbitmq.com for using the bus-refresh endpoint & need to add all microservices
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#include or exclude the endpoint for actuator (check endpoint from spring io docs for default included/excluded)
management.endpoints.web.exposure.include=mappings